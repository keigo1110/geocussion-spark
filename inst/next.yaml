- id: P-PERF-001
  title: "MeshPipeline 差分判定の過敏化による極端な FPS 低下"
  module: ["src/mesh/pipeline.py", "src/mesh/manager.py"]
  severity: "High"
  description: |
    _prev_sample を正しく初期化したことで距離ベースの差分判定が毎フレーム true となり、
    LODMeshGenerator が常にフル再生成を行うようになった。その結果 GPU なし環境で
    120→2 FPS まで低下。
  cause: |
    • ランダムサンプリングがフレーム毎に変わるため平均距離が常に閾値 0.01m を超過。
    • Jaccard voxelHash や pointCountRatio を EWMA 集約せず raw 判定している。
  fix_suggestion: |
    1) サンプル点インデックスを初回生成後に固定 (np.random.default_rng(seed).choice)。
    2) _DIFF_THRESHOLD_M を 0.03m に緩和し、距離 metric = median とする。
    3) voxelHash & countRatio を EWMA(alpha=0.3) で平滑化し、スコア >0.6 で dirty。
    4) 前回 LOD 生成後 200ms 未満なら強制キャッシュヒット (regeneration debounce)。
  related_tasks: [T-MESH-202]
  status: "TODO"

- id: T-PERF-001
  description: "MeshPipeline 差分ヒューリスティック最適化 & デバウンス"
  depends_on: [P-PERF-001]
  steps:
    - "1. 固定 RNG でサンプリング ID を初期化 (_rng = np.random.default_rng(1234))。"
    - "2. _distance_based_change: median(|p_i - prev_i|) > threshold 判定。"
    - "3. EWMA スコア計算 util を src/mesh/utils.py に実装し diff メトリクスへ適用。"
    - "4. PipelineManager.update_if_needed で 前回 regenerate からの経過時間を見て最小 0.2s 間隔を保証。"
  acceptance_criteria:
    - "手無しシーンで FPS ≥100、手移動時 regenerate で 30–60 FPS を維持。"
  status: "TODO"

- id: P-PERF-002
  title: "CPU Delaunay 100k+ pts がメインスレッドをブロックし GUI タイムアウト"
  module: ["src/mesh/pipeline.py", "src/mesh/lod_mesh.py", "src/mesh/delaunay.py"]
  severity: "Critical"
  description: |
    LODMeshGenerator が高密度点群 (≒70k~100k points) をそのまま CPU DelaunayTriangulator
    に渡し、30ms 以上ブロック。Open3D/UI のイベントポンプが遅れ "強制終了" 扱いで
    ターミナル SIGINT が送出される（ユーザが強制終了と誤解）。
  fix_suggestion: |
    • LODMeshGenerator.generate_mesh 内で adaptive_sampling=True の場合、
      max_points を 12,000 に制限し八分木 subsample を行う。
    • MeshPipeline.generate_mesh で CPU fallback 検知時 (triangulator.use_gpu=False)
      に sampling_ratio=0.15 を強制し再実行。
    • Triangulator を background ThreadPoolExecutor.submit() で非同期化し、
      進行中は cached_mesh を返して UI がフリーズしないようにする。
  status: "TODO"

- id: T-PERF-002
  description: "LODMeshGenerator adaptive_sampling + 非同期三角分割"
  depends_on: [P-PERF-002]
  steps:
    - "1. lod_mesh.py: max_points 引数を追加し default=12000。pointcloud が多い場合 subsample。"
    - "2. delaunay.py: triangulate_heightmap_async(height_map) を実装 (ThreadPoolExecutor)。"
    - "3. MeshPipeline.generate_mesh: GPU なし & points>max ⇒ async call, 旧 mesh を返却。"
    - "4. PipelineManager.update_if_needed: async future 完了時に結果を swap-in。"
  acceptance_criteria:
    - "常時 GUI 応答あり (Open3D 10 FPS 以上)。"
    - "手動 SIGINT なしで 3 分連続動作確認。"
  status: "TODO"

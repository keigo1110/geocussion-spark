id: terrain_audio_rt
date: "2025-07-09"
title: "リアルタイム地形追従 & 打音レスポンス高速化"
owner: "@zigen4"
status: "DRAFT"

# -----------------------------------------------------------------------------
# 目的 / 背景
# -----------------------------------------------------------------------------
# 砂場打楽器（砂場の地形を作り、形に応じた音が地形を叩くと鳴るインタラクション）の体験品質を高めるため、
#   1) 地形メッシュを最新状態へリアルタイムに追従させる
#   2) 叩いた瞬間に音が鳴る超低レイテンシ実行経路を確保する
# -----------------------------------------------------------------------------

objectives:
  - id: OBJ-001
    desc: |
      砂場地形を正確に認識し、ユーザーが手をどけた直後 (≦200 ms) に
      メッシュを更新・可視化する。
  - id: OBJ-002
    desc: |
      手が画面内に検出されている間はメッシュ更新を停止し、
      不要な GPU/CPU コストを削減する。
  - id: OBJ-003
    desc: |
      地形の大幅な変化 (高さ差 > 2 cm の領域が 5 % 以上) を検出した場合、
      "地形変形モード" に入り、楽器演奏を一時停止する。地形を変化させるのは基本手なので、手の検出がなくなると地形変形モードをやめる。
  - id: OBJ-004
    desc: |
      衝突検出 → 音響合成 までの往復レイテンシを 30 ms 未満に抑え、
      打楽器のような即時フィードバックを実現する。

# -----------------------------------------------------------------------------
# 要件
# -----------------------------------------------------------------------------
requirements:
  functional:
    - id: FR-1
      text: "通常時 (手が無い) は 1 Hz 程度で地形メッシュを更新する。"
    - id: FR-2
      text: "手検出中は地形メッシュ生成をスキップする。"
    - id: FR-3
      text: "手が消失したフレームで強制的にメッシュ更新をトリガする。"
    - id: FR-4
      text: "大規模地形変化を検出した場合、AudioSynthesizer を pause し UI にステータスを表示する。"
    - id: FR-5
      text: "衝突イベント発生から音声再生開始まで 30 ms 以内。"
  non_functional:
    - id: NFR-1
      text: "CPU 使用率を +10 % 以内、GPU 使用率を +15 % 以内に抑える (比較: 現行 HEAD)。"
    - id: NFR-2
      text: "mypy strict & pytest 全パスを維持する。"

# -----------------------------------------------------------------------------
# 既存実装ギャップ分析
# -----------------------------------------------------------------------------
problems:
  - id: GAP-01
    title: "メッシュ更新条件が単純なフレーム間隔のみ"
    impact: "不要な計算が発生 & 手検出時にも更新され得る"
  - id: GAP-02
    title: "手の消失をフラグ化する仕組みがない"
    impact: "手をどかしても更新が次の周期まで遅延"
  - id: GAP-03
    title: "地形変化量の定量判定ロジックが未実装"
    impact: "大規模変形時に Audio を止められない"
  - id: GAP-04
    title: "Collision → Audio パスの詳細プロファイル不足"
    impact: "ボトルネック特定が困難、レイテンシ保証不可"

# -----------------------------------------------------------------------------
# 実装プラン (タスク分解)
# -----------------------------------------------------------------------------
# WBS レベル: 大項目→小項目→受入れ基準 で管理
# -----------------------------------------------------------------------------
tasks:
  - id: T-1
    title: "MeshUpdateScheduler 実装"
    owner: "@zigen4"
    depends_on: []
    steps:
      - "メッシュ更新専用のスケジューラクラスを src/mesh/manager.py に追加。"
      - "入力: 現在の TrackedHand リスト, 前回更新時刻, 地形変化フラグ"
      - "ロジック: \n         * 手が存在: return SKIP\n         * 手→無し遷移: return FORCE_UPDATE\n         * 前回更新から >1 s: return PERIODIC_UPDATE"
      - "DualViewer._process_frame 内で PipelineManager.update_if_needed() へ scheduler 結果を渡す。"
    acceptance:
      - "手が映っていない & 1 s 経過で update が呼ばれる。"
      - "手→無し遷移フレームで即 update が呼ばれる。"
    status: "PENDING"

  - id: T-2
    title: "TerrainChangeDetector プロトタイプ"
    depends_on: []
    steps:
      - "連続 2 回の depth_image (または pointcloud) を比較し RMS 差分を計算。" 
      - "差分 > θ (例 20 mm) が画面の 5 % を超えたら change=True と返す。"
      - "変更検出時: EventQueue に TerrainChanged イベントを push。"
    acceptance:
      - "砂を大きく動かしたときに change=True を検出。"
    status: "PENDING"

  - id: T-3
    title: "地形変形モード制御 & AudioPause"
    depends_on: [T-2]
    steps:
      - "CollisionPipeline に terrain_deforming フラグを追加。"
      - "TerrainChanged 受信で terrain_deforming=True, 一定フレーム静止で False。"
      - "terrain_deforming=True 中は VoiceManager.stop_all_voices(), 衝突→音生成をスキップ。"
      - "UI オーバーレイに『地形更新中...』を表示 (既存 help_text の area を流用)。"
    acceptance:
      - "地形を崩すと音が止まり、静止後に自動で再開する。"
    status: "PENDING"

  - id: T-4
    title: "Audio レイテンシプロファイル & 最適化"
    depends_on: []
    steps:
      - "cProfile + time.perf_counter で HandCollision → allocate_and_play までを計測。"
      - "VoiceManager.allocate() のメモリアロケーションを事前 pool 化し 0alloc 化。"
      - "AudioMapper.map_collision_event を NumPy 配列演算へリファクタ。"
      - "GPU 距離計算のバッチサイズを 1 → N に動的調整し呼び出し回数を削減。"
    acceptance:
      - "平均レイテンシ < 30 ms (95th パーセンタイル)。"
    status: "PENDING"

metrics:
  - name: "Mesh update latency (hand→none)"
    target: "≤200 ms (avg)"
  - name: "Audio response latency (collision→sound)"
    target: "≤30 ms (p95)"
  - name: "CPU overhead"
    target: "+10 % 以下"
  - name: "GPU overhead"
    target: "+15 % 以下"

notes:
  - "Scheduler & Detector は将来 async/pipeline thread と統合予定 (非同期化余地あり)。"
  - "大量三角形 (>50k) で距離計算が重くなる場合は BVH early-exit を検討。"

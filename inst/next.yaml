version: "1.2"
last_updated: "2025-07-01"
subject: "Audio layer – Buzzing noise instead of clean percussive taps"

overview:
  summary: |
    Tapping collisions still produce a sand-storm / buzzing sound instead of a single
    percussive note.  The quick ADSR tweak (DEMO-011) improved duration but did not
    eliminate the noise.  Investigation below isolates three technical causes and
    proposes targeted fixes.

issues:
  - id: DEMO-012-BUZZ-NOISE
    title: "Stacked voices & envelope misuse cause continuous buzzing"
    root_cause: |
      Field tests show every video frame that reports a collision emits a new note.
      With ~20 fps this piles up >200 overlapping FM/Noise voices within one second,
      saturating the output bus and driving Freeverb into distortion → perceived
      "ジリジリ" static.

      Detailed findings:
        1. _audio_cooldown_time is 150 ms but predictive-history loop often creates
           unique CollisionEvent IDs for the *same* physical tap every frame →
           cooldown bypassed → frame-by-frame re-trigger.
        2. VoiceManager.cleanup_finished_voices() is called only every 10 frames and
           relies on estimated_remaining_time.  When sustain=0 the internal ADSR
           envelope still keeps the voice object alive until `release` finishes,
           so for a 0.6 s release tens of voices overlap.
        3. Instrument templates (FM, Noise) have no per-voice gain scaling; raw
           oscillator level × velocity can exceed 0 dBFS, and the sum of many such
           voices clips even before reverb.
    impact: "Audio output is dominated by clipping noise; clean percussion is masked."
    proposed_action: |
      • Collision de-bounce
        – Store last_event_hash per hand; suppress new audio if same contact triangle
          within 120 ms (configurable).
      • ADSR auto-stop
        – After allocating a voice, schedule VoiceManager.deallocate_voice() with
          delay=(attack+decay+release)+50 ms when sustain==0 to guarantee voice
          cleanup even if cleanup_finished_voices() is skipped.
      • Gain staging
        – Add `gain` field to AudioParameters; default 0.3 for high-energy FM/Noise.
        – Scale oscillator output (e.g., pyo.Sine.mul) by gain, NOT velocity.
        – Implement global limiter (pyo.Compress or pyo.Clip) after mix bus to
          cap peaks at −3 dBFS.
      • Tests
        – tests/sound_test.py::test_percussive_tap ensures RMS stays < −6 dBFS and
          voice count < 16 after a single tap burst.
